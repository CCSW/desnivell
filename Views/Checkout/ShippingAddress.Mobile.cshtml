@model Nop.Web.Models.Checkout.CheckoutShippingAddressModel
@using Nop.Core.Domain.Orders
@using Nop.Web.Models.Checkout
@using Nop.Web.Models.Common
@using Nop.Web.Framework.UI
@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="checkout-page">
    <div class="page-title">
        <h1>@T("Checkout.ShippingAddress")</h1>
    </div>
    <div class="clear">
    </div>
    <div class="checkout-data">
        @if (Model.ExistingAddresses.Count > 0)
        {
            <div>
                <div class="select-address-title">
                    @T("Checkout.SelectShippingAddress")
                </div>
                <div class="clear">
                </div>
                <div class="address-grid">
                    <ul data-role="listview" data-inset="true" data-filter="false">
                        @foreach (var item in Model.ExistingAddresses)
                        {
                            <li>
                                <div class="item-box">
                                    <div class="address-item">
                                        <div class="select-button">
                                            <a href="@Url.RouteUrl("CheckoutSelectShippingAddress", new { addressId = @item.Id })" data-role="button" data-ajax="false">@T("Checkout.ShipToThisAddress")</a>
                                        </div>
                                        <div class="address-box">
                                            <div>
                                                <b>@item.FirstName @item.LastName</b></div>
                                            <div>@T("Address.Fields.Email"): @item.Email</div>
                                            <div>
                                                @T("Address.Fields.PhoneNumber"):
                                                @item.PhoneNumber</div>
                                            <div>
                                                @T("Address.Fields.FaxNumber"):
                                                @item.FaxNumber</div>
                                            @if (!String.IsNullOrEmpty(item.Company))
                                            {
                                                <div>
                                                    @item.Company
                                                </div>
                                            }
                                            <div>
                                                @item.Address1</div>
                                            @if (!String.IsNullOrEmpty(item.Address2))
                                            {
                                                <div>
                                                    @item.Address2
                                                </div>
                                            }
                                            <div>
                                                @item.City, @item.StateProvinceName @item.ZipPostalCode</div>
                                            @if (!String.IsNullOrEmpty(item.CountryName))
                                            {
                                                <div>
                                                    @item.CountryName
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="clear">
            </div>
        }
        <div class="enter-address-title">
            @if (Model.ExistingAddresses.Count > 0)
            {
                @T("Checkout.OrEnterNewAddress")
            }
            else
            {
                @T("Checkout.EnterShippingAddress")
            }
        </div>
        <div class="clear">
        </div>
        <div class="enter-address">
            @*set "data-ajax" attribute to "false"*@
            @using (Html.BeginRouteForm("CheckoutShippingAddress", FormMethod.Post,
                new Dictionary<string, Object> { { "data-ajax", "false" } }))
            {
                <div class="enter-address-body">
                    @{
                var dataDictAddress = new ViewDataDictionary();
                //Merge ModelState (required for validation)
                dataDictAddress.ModelState.Merge(ViewData.ModelState);
                dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                        @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)              
                    }
                </div>
                <div class="clear">
                </div>
                <div class="buttons">
                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" id="nextstep" />
                </div>
            }
        </div>
    </div>
</div>
