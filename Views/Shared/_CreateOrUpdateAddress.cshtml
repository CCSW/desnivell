@model Nop.Web.Models.Common.AddressModel
@using Nop.Web.Framework;
<script type="text/javascript">
     $(function() {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function() {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache:false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function(id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }  
                });
            });
        });
</script>
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.FirstNameDisabled)
@Html.HiddenFor(model => model.LastNameDisabled)
@Html.HiddenFor(model => model.EmailDisabled)
@Html.HiddenFor(model => model.CompanyDisabled)
@Html.HiddenFor(model => model.CountryDisabled)
@Html.HiddenFor(model => model.StateProvinceDisabled)
@Html.HiddenFor(model => model.CityDisabled)
@Html.HiddenFor(model => model.Address1Disabled)
@Html.HiddenFor(model => model.Address2Disabled)
@Html.HiddenFor(model => model.ZipPostalCodeDisabled)
@Html.HiddenFor(model => model.PhoneNumberDisabled)
@Html.HiddenFor(model => model.FaxNumberDisabled)

<table>
    @if (!Model.FirstNameDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.FirstName):
            </td>
            <td>
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </td>
        </tr>
    }
    @if (!Model.LastNameDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.LastName):
            </td>
            <td>
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </td>
        </tr>
    }
    @if (!Model.EmailDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.Email):
            </td>
            <td>
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </td>
        </tr>
    }
    @if (!Model.CompanyDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.Company):
            </td>
            <td>
                @Html.EditorFor(model => model.Company)
                @Html.ValidationMessageFor(model => model.Company)
            </td>
        </tr>
    }
    @if (!Model.CountryDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.CountryId):
            </td>
            <td>
                @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries)
                @Html.ValidationMessageFor(model => model.CountryId)
            </td>
        </tr>
    }
    @if (!Model.StateProvinceDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.StateProvinceId):
            </td>
            <td>
                @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
                <span id="states-loading-progress" style="display: none;">@T("Common.Wait...")
                            <img src='@Url.Content("~/Content/Images/ajax_loader_small.gif")' alt="@T("Common.Wait...")" />
                        </span>
                @Html.ValidationMessageFor(model => model.StateProvinceId)
            </td>
        </tr>
    }
    @if (!Model.CityDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.City):
            </td>
            <td>
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </td>
        </tr>
    }
    @if (!Model.Address1Disabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.Address1):
            </td>
            <td>
                @Html.EditorFor(model => model.Address1)
                @Html.ValidationMessageFor(model => model.Address1)
            </td>
        </tr>
    }
    @if (!Model.Address2Disabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.Address2):
            </td>
            <td>
                @Html.EditorFor(model => model.Address2)
                @Html.ValidationMessageFor(model => model.Address2)
            </td>
        </tr>
    }
    @if (!Model.ZipPostalCodeDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.ZipPostalCode):
            </td>
            <td>
                @Html.EditorFor(model => model.ZipPostalCode)
                @Html.ValidationMessageFor(model => model.ZipPostalCode)
            </td>
        </tr>
    }
    @if (!Model.PhoneNumberDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.PhoneNumber):
            </td>
            <td>
                @Html.EditorFor(model => model.PhoneNumber)
                @Html.ValidationMessageFor(model => model.PhoneNumber)
            </td>
        </tr>
    }
    @if (!Model.FaxNumberDisabled)
    {
        <tr>
            <td>
                @Html.LabelFor(model => model.FaxNumber):
            </td>
            <td>
                @Html.EditorFor(model => model.FaxNumber)
                @Html.ValidationMessageFor(model => model.FaxNumber)
            </td>
        </tr>
    }
</table>
